package repository;

import java.io.InputStream;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import domain.Free;

public class FreeDAO {

	private SqlSessionFactory factory;
	
	private static FreeDAO instance = new FreeDAO();
	private FreeDAO() {
		try {
			String resource = "mybatis/config/mybatis-config.xml";
			InputStream inputStream = Resources.getResourceAsStream(resource);
			factory = new SqlSessionFactoryBuilder().build(inputStream);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static FreeDAO getInstance() {
		return instance;
	}
	
	public List<Free> selectBoardList() {
		SqlSession ss = factory.openSession();
		List<Free> list = ss.selectList("mybatis.mapper.free.selectBoardList");
		ss.close();
		return list;
	}
	
	public int insertBoard(Free board) {
		SqlSession ss = factory.openSession(false);
		int res = ss.insert("mybatis.mapper.free.insertBoard", board);
		if(res>0) ss.commit();
		ss.close();
		return res;
	}
	
	public int deleteBoard(Long freeNo) {
		SqlSession ss = factory.openSession(false);
		int res = ss.delete("mybatis.mapper.free.deleteBoard", freeNo);
		if(res > 0) ss.commit();
		ss.close();
		return res;
	}
	
	public Free selectBoardByFreeNo(Long freeNo) {
		SqlSession ss = factory.openSession();
		Free board = ss.selectOne("mybatis.mapper.free.selectBoardByFreeNo", freeNo);
		ss.close();
		return board;
	}
	
	public int updateBoard(Map<String, String> map) {
		SqlSession ss = factory.openSession(false);
		int res = ss.update("mybatis.mapper.free.updateBoard", map);
		if(res > 0) ss.commit();
		ss.close();
		return res;
	}
	
	public int updateHit(Long freeNo) {
		SqlSession ss = factory.openSession();
		int res = ss.selectOne("mybatis.mapper.free.updateHit", freeNo);
		if(res > 0) ss.commit();
		ss.close();
		return res;
	}
	
	
}
