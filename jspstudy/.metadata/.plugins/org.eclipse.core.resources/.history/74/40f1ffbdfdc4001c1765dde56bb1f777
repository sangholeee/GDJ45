package dbcp;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

public class ProductAddService implements ProductService {

	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) {
		
		/* 1. 파일 업로드 */
		
		// 1) 업로드 할 디렉터리 경로 알아내기(서버 내부 realPath)
		String realPath = request.getServletContext().getRealPath("storage");
		
		// 2) 업로드 할 디렉터리 없으면 만들기
		File dir = new File(realPath);
		if(dir.exists() == false) {
			dir.mkdirs();
		}
		
		// 3) MultipartRequest 인스턴스 만들기
		//    여기서 업로드가 진행된다.
		MultipartRequest mr = null;
		try {
			mr = new MultipartRequest(request, 
									  realPath,
									  1024 * 1024 * 10, 
									  "UTF-8", 
									  new DefaultFileRenamePolicy());    // 중복처리
		} catch (IOException e) {
			try {
				PrintWriter out = response.getWriter();
				out.println("<script>");
				out.println("alert('파일 첨부가 실패했습니다.')");
				out.println("history.back()");
				out.println("</script>");
				out.flush();
				out.close();
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
		
		// 2. DB 저장
		
		String name = mr.getParameter("name");
		Integer price = Integer.parseInt(mr.getParameter("price"));
		String image = mr.getFilesystemName("filename");
		ProductDTO product = ProductDTO.builder()
				.name(name)
				.price(price)
				.image(image)
				.build();
		try {
		int res = ProductDAO.getInstance().insertProduct(product);
		} catch (Exception e) {
			System.out.println(e.getClass().getName());
		}
		
		// 3. 예외 처리(예외에 따른 응답 만들기)
		
		
		
		return null;
	}

}
