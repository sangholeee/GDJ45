

Tool
1. STS4 사용 (사용하던 2021-03월 버전은 STS-4.10)
   (다운로드링크 - https://github.com/spring-projects/sts4/wiki/Previous-Versions)
                      - spring-tool-suite-t-t.10.0.RELEASE-e4.19.0-win32.win32.x86_64.zip)
2. Lombok 사용시 SpirngToolSuite4.exe 대상으로 lombok 설치
   cd c:\gdj45\installer\jar
   java -jar lombok-1.18.22.jar

3. springbootstudy 디렉터리를 workspace로 설정
4. [Help] - [Eclipse Marketplace] - "java web" 검색
    - "Eclipse Enterprise Java and Web Developer Tools 3.21" 설치
5. [Window] - [Preferences]
   1) 테마 / 글꼴
   2) 인코딩

Project(ex01)
1. start.spring.io 에서 프로젝트를 만들고 STS4는 해당 프로젝트를 import함
2. Project        - Maven Project
   Language    - Java
   Spring Boot - 2.6.8
   - Group      - com.goodee
   - Artifact     - ex01
   - Name      - ex01
   Packing      - War
   Java           - 11
   Dependencies
   - Spring Web : spring-boot-starter, spring-boot-starter-tomcat, jackson, spring-core, spring-mvc(Web Container == Tomcat)
   - Lombok
   - Oracle Driver
   - MyBatis Framework
   - jackson은 들어있다.
   - json은 Maven Repository 가야한다.

-> 다운로드 폴더에 .zip 파일 생성
-> 압축 풀어서 springboot 디렉터리에 가져다 놓기
-> STS4 - Import projects - Maven - Existing Maven Projects

- application properties
  server.port=9999
  저장

3. Project Setting
   1) web 폴더 만들기
      src/main/webapp/resources
      src/main/webapp/WEB_INF/views   ->    boot에선 views를 없애 간소화 할 수 있다.
                                                    ->    application.properties 수정해줘야 한다.
   2) application.properties 작업하기
      src/main/resources/aaplication.properties

	# server 포트 변경
	server.port=9999

	# sevelet context.xml
	spring.web.resources.static-locations=/resources/**
	spring.mvc.view.prefix=/WEB-INF/
            // STS3는 views와 web.xml을 구분하기 위해 /WEB-INF/views/로 하지만
            // boot는 web.xml이 없기 때문에 /WEB-INF/까지만 써도 된다.
	spring.mvc.view.suffix=.jsp

	# web.xml
	server.servlet.encoding.charset=UTF-8
	server.servlet.encoding.enabled=true
	server.servlet.encoding.force=true

	# session(1800초==30분)
	server.servlet.session.timeout=1800

	# db.properties
	spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
	spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
	spring.datasource.username=scott
	spring.datasource.password=1111

	#mybatis
	mybatis.config-location=mybatis/config/mybatis-config.xml
	mybatis.mapper-locations=mybatis/mapper/*.xml

   3) pom.xml 작업하기
       - boot에서는 Version을 따로 기입하지 않는다.
      (1) tomcat-embed-jasper
	<!-- https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper -->
	<dependency>
	    <groupId>org.apache.tomcat.embed</groupId>
	    <artifactId>tomcat-embed-jasper</artifactId>
	</dependency>
      (2) jstl
	<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
	<dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>jstl</artifactId>
	</dependency>
   4) JSP 추가
      src/main/webapp/WEB-INF/index.jsp
   5) Controller 생성
      src/main/java
        ㄴcom.goodee.ex01.controller
          ㄴHomeController.java

4. Project Run
    1) [Run As] - [Spring Boot App]
    2) 브라우저 열고 http://localhost:9999 입력 (http://localhost:9999/ex01 아님을 주의)


* summernote.css
  summernote.js   -> boot와 충돌이 있다.

  summernote-lite.css
  summernote-lite.js  -> 사용

이미지를 첨부하면
<img src="http://localhost:9999/bbs/getImage?file-abc.jpg">와 같은 형태로 저장된다.


(ex02)
Spring Initializer
* Packaging
   jar  ->  jsp 파일을 사용하지 않겠다.(tomcat의 도움을 받지 않겠다.)
   war -> 하던대로 하겠다?

* Dependencies
  Thymeleaf -> html을 바로 사용할 수 있게 된다.












