<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.goodee.ex11.mapper.EmployeeMapper">

	<!-- 전체 레코드 갯수 -->
	<select id="selectEmployeeCount" resultType="Integer">
		SELECT COUNT(*)
		  FROM EMPLOYEES
	</select>
	
	<!-- BEGIN~END 사이 목록 반환 -->
	<!-- resultType이 List 일때는 domain으로 사용한다. -->
	<!-- WHERE절을 쓰고 있으면 <where>를 쓸 수 없으므로 조인 문법으로 쓴다. -->
	<select id="selectEmployees" parameterType="Map" resultType="Employee">
		SELECT A.RN, A.EMPLOYEE_ID, A.FIRST_NAME, A.LAST_NAME, A.EMAIL, A.PHONE_NUMBER, A.HIRE_DATE, A.JOB_ID, A.SALARY, A.COMMISSION_PCT, A.MANAGER_ID, A.DEPARTMENT_ID, A.DEPARTMENT_NAME
  		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY HIRE_DATE DESC) AS RN, E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, E.EMAIL, E.PHONE_NUMBER, E.HIRE_DATE, E.JOB_ID, E.SALARY, E.COMMISSION_PCT, E.MANAGER_ID, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
  		  		  FROM DEPARTMENTS D RIGHT JOIN EMPLOYEES E
  		  		    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID) A
 		 WHERE A.RN BETWEEN #{beginRecord} AND #{endRecord}
	</select>
	
	
	<!-- 검색된 레코드 갯수 -->
	<!-- SALARY 검색할 때 TO_NUMBER()는 자동으로 적용된다. -->
	<!-- 
		UPPER를 쓰면 대문자로 바꿔서 검색을 해주고 LOWER를 쓰면 소문자로 바꿔서 검색을 해준다.
		UPPER(#{query})
	 -->
	<select id="selectFindCount" parameterType="Map" resultType="Integer">
		SELECT COUNT(*)
		  FROM EMPLOYEES
	 	<where>
			<choose>
				<when test="column == 'EMPLOYEE_ID'">${column} = TRIM(#{query})</when>
				<when test="column == 'FIRST_NAME'">${column} LIKE '%' || #{query} || '%'</when>
				<when test="column == 'HIRE_DATE'">${column} BETWEEN TO_DATE(#{begin}, 'YYYY-MM-DD') AND TO_DATE(#{end}, 'YYYY-MM-DD')</when>
				<when test="column == 'SALARY'">${column} BETWEEN #{begin} AND #{end}</when>
			</choose>
		</where>
	</select>
	<!-- 검색 -->
	<!-- TRIM : 불필요한 공백 제거 -->
	<!-- ${column} : EMPLOYEE_ID, #{column} : 'EMPLOYEE_ID' -->
	<!--  WHERE 1 = 1
		 <if test="column == 'EMPLOYEE_ID'">AND ${column} = TRIM(#{query})</if>
	-->
	<select id="selectFindList" parameterType="Map" resultType="Employee">
		SELECT A.RN, A.EMPLOYEE_ID, A.FIRST_NAME, A.LAST_NAME, A.EMAIL, A.PHONE_NUMBER, A.HIRE_DATE, A.JOB_ID, A.SALARY, A.COMMISSION_PCT, A.MANAGER_ID, A.DEPARTMENT_ID, A.DEPARTMENT_NAME
  		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY HIRE_DATE DESC) AS RN, E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, E.EMAIL, E.PHONE_NUMBER, E.HIRE_DATE, E.JOB_ID, E.SALARY, E.COMMISSION_PCT, E.MANAGER_ID, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
  		  		  FROM DEPARTMENTS D RIGHT JOIN EMPLOYEES E
  		  		    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
			   <where>
				 <choose>
				 	<when test="column == 'EMPLOYEE_ID'">${column} = TRIM(#{query})</when>
				 	<when test="column == 'FIRST_NAME'">${column} LIKE '%' || #{query} || '%'</when>
				 	<when test="column == 'HIRE_DATE'">${column} BETWEEN TO_DATE(#{begin}, 'YYYY-MM-DD') AND TO_DATE(#{end}, 'YYYY-MM-DD')</when>
					<when test="column == 'SALARY'">${column} BETWEEN #{begin} AND #{end}</when>
				 </choose>
			   </where>) A
 		 WHERE A.RN BETWEEN #{beginRecord} AND #{endRecord}
	</select>
	
	<!-- 자동완성 -->
	<!-- DISTINCT : 중복 제거 -->
	<select id="autoComplete" parameterType="Map" resultType="Employee">
		SELECT DISTINCT ${column}
		  FROM EMPLOYEES
		 WHERE ${column} LIKE #{query} || '%'
	</select>
	
	
	
	
	
	
	
	
	
	
	
</mapper>