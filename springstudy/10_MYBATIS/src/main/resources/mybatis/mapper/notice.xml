<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- 
	중요. mapper의 namespace가 달라집니다.
	notice.xml의 쿼리문을 호출할 NoticeMapper.java를 namespace로 작성합니다.
-->

<mapper namespace="com.goodee.ex10.mapper.NoticeMapper">

	<!-- 목록 -->
	<select id="selectNoticeList" resultType="NoticeDTO">
		SELECT NOTICE_NO, TITLE, CONTENT, CREATED, LASTMODIFIED
		  FROM NOTICE
		 ORDER BY NOTICE_NO DESC
	</select>
	
	
	<!-- 등록 -->
	<insert id="insertNotice" parameterType="NoticeDTO">    <!-- resultType="int" -> insert의 결과는 0 or 1인거 알고 있으니 적지 않아도 되도록 되어있다. -->
		<!-- 
		${noticeNo} : 값이 10일 때 10 
		#{title} : 값이 공지일 때 '공지'
		-> 숫자를 넘길 때 NOTICE_NO=TO_NUMBER('1')로 변환되어 넘어가기 때문에 숫자도 #으로 넘긴다. 
		-->
		INSERT INTO NOTICE
			(NOTICE_NO, TITLE, CONTENT, HIT, CREATED, LASTMODIFIED)
		VALUES
			(NOTICE_SEQ.NEXTVAL, #{title}, #{content}, 0, SYSTIMESTAMP, SYSTIMESTAMP)
	</insert>


	<!-- 상세보기 -->
	<select id="selectNoticeByNo" parameterType="Long" resultType="NoticeDTO">        <!-- Spring MYBATIS는 여러 타입을 모두 보낼 수 있다. -->
		SELECT NOTICE_NO, TITLE, CONTENT, HIT, CREATED, LASTMODIFIED
		  FROM NOTICE
		 WHERE NOTICE_NO = #{noticeNo}
	</select>
	
	
	<!-- 조회수 증가 -->	
	<update id="updateHit" parameterType="Long">
		UPDATE NOTICE
		   SET HIT = HIT + 1
		 WHERE NOTICE_NO = #{noticeNo}
	</update>
	
	
	<!-- 수정 -->
	<update id="updateNotice" parameterType="NoticeDTO">
		UPDATE NOTICE
		   SET TITLE = #{title}
		     , CONTENT = #{content}
		     , LASTMODIFIED = SYSTIMESTAMP
		 WHERE NOTICE_NO = #{noticeNo}
	</update>
	
	
	<!-- 삭제 -->
	<delete id="deleteNotice" parameterType="Long">
		DELETE
		  FROM NOTICE
		 WHERE NOTICE_NO = #{noticeNo}
	</delete>
	
	<!-- 다중 삭제 -->
	<!-- MYBATIS가 지원하는 동적 쿼리문, SELECT문에서 많이 사용 -->
	<!-- DELETE FROM NOTICE WHERE NOTICE_NO IN(1,4) -->
	<!-- jsp foreach 문에서 items -> collection, var -> item -->
	<!-- 수정을 편하게 하기 위해 SET을 작성할 때는 ,를 앞에 WHERE을 작성할 때는 AND를 앞에두고 첫 째줄에 1 = 1 AND 를 작성 -->
	<delete id="deleteNoticeList" parameterType="List">
		DELETE
		  FROM NOTICE
		 <where>
		 	<foreach collection="list" item="noticeNo" open="NOTICE_NO IN(" separator="," close=")">
		 		#{noticeNo}
		 	</foreach>
		 </where>
	</delete>
	
</mapper>